#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ NaN –∏ –ø—É—Å—Ç—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤ —Å–∏—Å—Ç–µ–º–µ.
"""

import sys
import os
import pandas as pd
import numpy as np

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ src –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../src')))

from core.shrinkage_system import ShrinkageSystem


def test_nan_handling():
    """–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ NaN –∏ –ø—É—Å—Ç—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π."""
    print("üîç –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ NaN –∏ –ø—É—Å—Ç—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º—É —É—Å—É—à–∫–∏
    system = ShrinkageSystem()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –ø—É—Å—Ç—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    test_data = pd.DataFrame([
        {
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç 1',
            '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': np.nan,  # NaN –∑–Ω–∞—á–µ–Ω–∏–µ
            '–ü—Ä–∏—Ö–æ–¥': 2.0,
            '–†–∞—Å—Ö–æ–¥': 1.5,
            '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 0.5,
            '–ü–µ—Ä–∏–æ–¥_—Ö—Ä–∞–Ω–µ–Ω–∏—è_–¥–Ω–µ–π': 7
        },
        {
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç 2',
            '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': None,  # None –∑–Ω–∞—á–µ–Ω–∏–µ
            '–ü—Ä–∏—Ö–æ–¥': 3.0,
            '–†–∞—Å—Ö–æ–¥': 2.0,
            '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 1.0,
            '–ü–µ—Ä–∏–æ–¥_—Ö—Ä–∞–Ω–µ–Ω–∏—è_–¥–Ω–µ–π': 7
        },
        {
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç 3',
            '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': '',  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
            '–ü—Ä–∏—Ö–æ–¥': 1.0,
            '–†–∞—Å—Ö–æ–¥': 0.5,
            '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 0.5,
            '–ü–µ—Ä–∏–æ–¥_—Ö—Ä–∞–Ω–µ–Ω–∏—è_–¥–Ω–µ–π': 7
        },
        {
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç 4',
            '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 0.0,  # –ù–æ–ª—å
            '–ü—Ä–∏—Ö–æ–¥': 4.0,
            '–†–∞—Å—Ö–æ–¥': 3.0,
            '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 1.0,
            '–ü–µ—Ä–∏–æ–¥_—Ö—Ä–∞–Ω–µ–Ω–∏—è_–¥–Ω–µ–π': 7
        }
    ])
    
    print("üìã –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    print(test_data.to_string(index=False))
    
    print("\nüìã –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏–π...")
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
    results = system._check_inventory_availability(test_data, "—Ç–µ—Å—Ç–æ–≤—ã–π_—Ñ–∞–π–ª.xlsx")
    
    print("\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    print(results.to_string(index=False))
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ 0.0
    success = True
    for idx, row in results.iterrows():
        if row['–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫'] != 0.0 and pd.isna(row['–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫']):
            print(f"‚ùå –ù–∞–π–¥–µ–Ω–æ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è {row['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞']}")
            success = False
    
    if success:
        print("\n‚úÖ –í—Å–µ –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ 0.0")
    else:
        print("\n‚ùå –ù–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è")


if __name__ == "__main__":
    test_nan_handling()