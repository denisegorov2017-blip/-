#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–æ—á–Ω–æ—Å—Ç–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ —É—Å—É—à–∫–∏

–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç, –∫–∞–∫ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–æ—á–Ω–æ—Å—Ç—å —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ 
–ø—É—Ç–µ–º –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –ø–µ—Ä–µ—Å—á–µ—Ç–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π —É—Å—É—à–∫–∏ –ø–æ —Ç–µ–º –∂–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º.
"""

import sys
import os
import pandas as pd
import json

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ src –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../src')))

from core.shrinkage_verification_system import ShrinkageVerificationSystem
from core.shrinkage_system import ShrinkageSystem


def demonstrate_verification_process():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ —É—Å—É—à–∫–∏."""
    print("üîç –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´ –í–ï–†–ò–§–ò–ö–ê–¶–ò–ò –ö–û–≠–§–§–ò–¶–ò–ï–ù–¢–û–í –£–°–£–®–ö–ò")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º—É –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    verification_system = ShrinkageVerificationSystem()
    
    # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤
    shrinkage_system = ShrinkageSystem()
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–∏–º–∏—Ç–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏–∏)
    test_data = [
        {
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': '–†—ã–±–∞ —Å–≤–µ–∂–∞—è, –æ—Ö–ª–∞–∂–¥–µ–Ω–Ω–∞—è',
            '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 1000.0,
            '–ü—Ä–∏—Ö–æ–¥': 500.0,
            '–†–∞—Å—Ö–æ–¥': 300.0,
            '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 1195.0,  # –£—Å—É—à–∫–∞ 5.0 –∫–≥
            '–ü–µ—Ä–∏–æ–¥_—Ö—Ä–∞–Ω–µ–Ω–∏—è_–¥–Ω–µ–π': 7
        },
        {
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': '–†—ã–±–∞ —Å–æ–ª–µ–Ω–∞—è',
            '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 800.0,
            '–ü—Ä–∏—Ö–æ–¥': 400.0,
            '–†–∞—Å—Ö–æ–¥': 200.0,
            '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 992.0,  # –£—Å—É—à–∫–∞ 8.0 –∫–≥
            '–ü–µ—Ä–∏–æ–¥_—Ö—Ä–∞–Ω–µ–Ω–∏—è_–¥–Ω–µ–π': 7
        },
        {
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': '–†—ã–±–∞ –≥–æ—Ä—è—á–µ–≥–æ –∫–æ–ø—á–µ–Ω–∏—è',
            '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 600.0,
            '–ü—Ä–∏—Ö–æ–¥': 300.0,
            '–†–∞—Å—Ö–æ–¥': 150.0,
            '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 735.0,  # –£—Å—É—à–∫–∞ 15.0 –∫–≥
            '–ü–µ—Ä–∏–æ–¥_—Ö—Ä–∞–Ω–µ–Ω–∏—è_–¥–Ω–µ–π': 7
        }
    ]
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ DataFrame
    dataset = pd.DataFrame(test_data)
    print("üìä –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤:")
    print(dataset.to_string(index=False))
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
    print("\nüßÆ –†–∞—Å—á–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ —É—Å—É—à–∫–∏...")
    results = shrinkage_system.process_dataset(
        dataset=dataset,
        source_filename="demo_data.xlsx",
        use_adaptive=True
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å —Ä–∞—Å—á–µ—Ç–∞
    if results['status'] != 'success':
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤: {results.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
        return
    
    print("‚úÖ –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–π –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã
    print("\nüîç –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–æ—á–Ω–æ—Å—Ç–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤...")
    coefficients_results = results['coefficients']
    
    for i, (original_row, coeff_result) in enumerate(zip(test_data, coefficients_results)):
        print(f"\nüìã –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–ª—è: {original_row['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞']}")
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ, –ø–æ–Ω—è—Ç–Ω–æ–º —Å–∏—Å—Ç–µ–º–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
        verification_data = {
            'name': original_row['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞'],
            'initial_balance': original_row['–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫'],
            'incoming': original_row['–ü—Ä–∏—Ö–æ–¥'],
            'outgoing': original_row['–†–∞—Å—Ö–æ–¥'],
            'final_balance': original_row['–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫'],
            'storage_days': original_row['–ü–µ—Ä–∏–æ–¥_—Ö—Ä–∞–Ω–µ–Ω–∏—è_–¥–Ω–µ–π']
        }
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã
        coefficients = {
            'model_type': coeff_result.get('–ú–æ–¥–µ–ª—å', 'exponential'),
            'coefficients': {
                'a': coeff_result.get('–ö–æ—ç—Ñ_a', 0.015),
                'b': coeff_result.get('–ö–æ—ç—Ñ_b', 0.049),
                'c': coeff_result.get('–ö–æ—ç—Ñ_c', 0.001)
            },
            'r_squared': coeff_result.get('–¢–æ—á–Ω–æ—Å—Ç—å_R2', 95) / 100.0  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∏–∑ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
        }
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é
        verification_results = verification_system.verify_coefficients_accuracy(
            verification_data, coefficients
        )
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –æ—Ç—á–µ—Ç
        report = verification_system.generate_verification_report(verification_results)
        print(report)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç –≤ —Ñ–∞–π–ª
        report_filename = f"—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/–æ—Ç—á–µ—Ç_–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏_{i+1}.txt"
        os.makedirs("—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã", exist_ok=True)
        with open(report_filename, 'w', encoding='utf-8') as f:
            f.write(report)
        print(f"üíæ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {report_filename}")


def demonstrate_manual_verification():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä—É—á–Ω—É—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏."""
    print("\n\nüîç –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–£–ß–ù–û–ô –í–ï–†–ò–§–ò–ö–ê–¶–ò–ò")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º—É –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    verification_system = ShrinkageVerificationSystem()
    
    # –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏–∏
    inventory_data = {
        'name': '–†—ã–±–∞ –º–æ—Ä–æ–∂–µ–Ω–∞—è',
        'initial_balance': 1200.0,
        'incoming': 600.0,
        'outgoing': 400.0,
        'final_balance': 1390.0,  # –£—Å—É—à–∫–∞ 10.0 –∫–≥
        'storage_days': 14
    }
    
    # –ó–∞–¥–∞–Ω–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ä–∞—Å—á–µ—Ç–æ–≤)
    calculated_coefficients = {
        'model_type': 'exponential',
        'coefficients': {
            'a': 0.008,  # –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É—Å—É—à–∫–∏
            'b': 0.05,   # –°–∫–æ—Ä–æ—Å—Ç—å —É—Å—É—à–∫–∏
            'c': 0.0005  # –õ–∏–Ω–µ–π–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        },
        'r_squared': 0.92
    }
    
    print("üìä –î–∞–Ω–Ω—ã–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏–∏:")
    print(f"   –ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞: {inventory_data['name']}")
    print(f"   –ù–∞—á–∞–ª—å–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫: {inventory_data['initial_balance']} –∫–≥")
    print(f"   –ü—Ä–∏—Ö–æ–¥: {inventory_data['incoming']} –∫–≥")
    print(f"   –†–∞—Å—Ö–æ–¥: {inventory_data['outgoing']} –∫–≥")
    print(f"   –ö–æ–Ω–µ—á–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫: {inventory_data['final_balance']} –∫–≥")
    print(f"   –ü–µ—Ä–∏–æ–¥ —Ö—Ä–∞–Ω–µ–Ω–∏—è: {inventory_data['storage_days']} –¥–Ω–µ–π")
    
    print("\nüßÆ –ó–∞–¥–∞–Ω–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã:")
    coeffs = calculated_coefficients['coefficients']
    print(f"   –ú–æ–¥–µ–ª—å: {calculated_coefficients['model_type']}")
    print(f"   –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç a: {coeffs['a']}")
    print(f"   –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç b: {coeffs['b']}")
    print(f"   –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç c: {coeffs['c']}")
    print(f"   –¢–æ—á–Ω–æ—Å—Ç—å (R¬≤): {calculated_coefficients['r_squared']:.4f}")
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é
    print("\nüîç –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
    verification_results = verification_system.verify_coefficients_accuracy(
        inventory_data, calculated_coefficients
    )
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    report = verification_system.generate_verification_report(verification_results)
    print("\n" + report)
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    if verification_results['verification_status'] == 'success':
        metrics = verification_results['accuracy_metrics']
        validation = verification_results['validation_status']
        
        print(f"\nüìä –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:")
        print(f"   –§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —É—Å—É—à–∫–∞: {metrics['actual_shrinkage']:.4f} –∫–≥")
        print(f"   –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º–∞—è —É—Å—É—à–∫–∞: {metrics['predicted_shrinkage']:.4f} –∫–≥")
        print(f"   –†–∞–∑–Ω–∏—Ü–∞: {metrics['absolute_difference']:.4f} –∫–≥")
        print(f"   –°—Ç–∞—Ç—É—Å –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {validation['overall_status'].upper()}")
        print(f"   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {validation['recommendation']}")


if __name__ == "__main__":
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs("—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã", exist_ok=True)
    
    try:
        demonstrate_verification_process()
        demonstrate_manual_verification()
        print("\nüéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {str(e)}")
        import traceback
        traceback.print_exc()