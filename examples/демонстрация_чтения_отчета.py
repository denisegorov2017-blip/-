#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —á—Ç–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç—á–µ—Ç–∞ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã "–ë–´–ß–ö–ò –í–Ø–õ–ï–ù–´–ï"

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ —Å–∏—Å—Ç–µ–º–∞ —á–∏—Ç–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Excel-—Ñ–∞–π–ª–∞,
–Ω–∞—Ö–æ–¥–∏—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—É –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –µ—ë –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ —É—Å—É—à–∫–∏.
"""

import sys
import os
import pandas as pd
import json

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ src –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../src')))

from core.shrinkage_system import ShrinkageSystem


def demonstrate_report_reading():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —á—Ç–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ "–ë–´–ß–ö–ò –í–Ø–õ–ï–ù–´–ï"."""
    print("üîç –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —á—Ç–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç—á–µ—Ç–∞")
    print("=" * 60)
    
    # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–∞–Ω–Ω—ã—Ö
    file_path = r"C:\Users\D_909\Desktop\–¥–ª—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞\–∏—Å—Ö–æ–¥–Ω—ã–µ_–¥–∞–Ω–Ω—ã–µ\–î–ª—è_—Ä–∞—Å—á–µ—Ç–∞_–∫–æ—ç—Ñ—Ñ\b3ded820-4385-4a42-abc7-75dc0756d335_6ba7ac50-fb1a-4bea-9489-265bdfdcb8d1_–≤—Å—è –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥ —Å 15.07.25 –ø–æ 21.07.25.xls"
    
    print(f"üìÇ –†–∞–±–æ—Ç–∞–µ–º —Å —Ñ–∞–π–ª–æ–º: {os.path.basename(file_path)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
        return
    
    try:
        # 1. –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ Excel
        print("\nüìñ –≠—Ç–∞–ø 1: –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ Excel...")
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        df_raw = pd.read_excel(file_path, header=None)
        print(f"üìä –†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: {df_raw.shape[0]} —Å—Ç—Ä–æ–∫, {df_raw.shape[1]} —Å—Ç–æ–ª–±—Ü–æ–≤")
        
        # 2. –ü–æ–∏—Å–∫ —Å—Ç—Ä–æ–∫ —Å –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞–º–∏
        print("\nüîç –≠—Ç–∞–ø 2: –ü–æ–∏—Å–∫ —Å—Ç—Ä–æ–∫ —Å –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞–º–∏...")
        # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ "–ë–´–ß–ö–ò –í–Ø–õ–ï–ù–´–ï"
        product_rows = df_raw[
            df_raw[0].astype(str).str.contains('–ë–´–ß–ö–ò –í–Ø–õ–ï–ù–´–ï', case=False, na=False)
        ]
        
        print(f"üéØ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π —Å '–ë–´–ß–ö–ò –í–Ø–õ–ï–ù–´–ï': {len(product_rows)}")
        
        if len(product_rows) == 0:
            print("‚ùå –ó–∞–ø–∏—Å–∏ —Å '–ë–´–ß–ö–ò –í–Ø–õ–ï–ù–´–ï' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ—Ö–æ–∂–∏–µ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã
            similar_rows = df_raw[
                df_raw[0].astype(str).str.contains('–ë–´–ß–ö–ò|–í–Ø–õ–ï–ù–´–ï', case=False, na=False)
            ]
            if len(similar_rows) > 0:
                print("üìù –ü–æ—Ö–æ–∂–∏–µ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã:")
                for idx, row in similar_rows.head(5).iterrows():
                    print(f"   - {row.iloc[0]}")
            return
        
        # 3. –ê–Ω–∞–ª–∏–∑ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫
        print("\nüìä –≠—Ç–∞–ø 3: –ê–Ω–∞–ª–∏–∑ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫...")
        product_data = []
        
        for index, row in product_rows.iterrows():
            try:
                # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã
                nomenclature = str(row.iloc[0]) if len(row) > 0 else f"–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞_{index}"
                
                print(f"\nüìÑ –°—Ç—Ä–æ–∫–∞ {index}:")
                print(f"   –ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞: {nomenclature}")
                
                # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
                # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É: —Å—Ç–æ–ª–±—Ü—ã 4, 6, 7, 8 —Å–æ–¥–µ—Ä–∂–∞—Ç –¥–∞–Ω–Ω—ã–µ
                initial_balance = pd.to_numeric(row.iloc[4], errors='coerce') if len(row) > 4 else None
                incoming = pd.to_numeric(row.iloc[6], errors='coerce') if len(row) > 6 else None
                outgoing = pd.to_numeric(row.iloc[7], errors='coerce') if len(row) > 7 else None
                final_balance = pd.to_numeric(row.iloc[8], errors='coerce') if len(row) > 8 else None
                
                print(f"   –ù–∞—á–∞–ª—å–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫ (—Å—Ç–æ–ª–±–µ—Ü 4): {initial_balance}")
                print(f"   –ü—Ä–∏—Ö–æ–¥ (—Å—Ç–æ–ª–±–µ—Ü 6): {incoming}")
                print(f"   –†–∞—Å—Ö–æ–¥ (—Å—Ç–æ–ª–±–µ—Ü 7): {outgoing}")
                print(f"   –ö–æ–Ω–µ—á–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫ (—Å—Ç–æ–ª–±–µ—Ü 8): {final_balance}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—Ç
                if pd.notna(initial_balance) and pd.notna(final_balance):
                    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∞–∫—Ç–∏—á–µ—Å–∫—É—é —É—Å—É—à–∫—É
                    theoretical_balance = initial_balance + (incoming if pd.notna(incoming) else 0) - (outgoing if pd.notna(outgoing) else 0)
                    actual_shrinkage = theoretical_balance - final_balance
                    
                    print(f"   –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –±–∞–ª–∞–Ω—Å: {theoretical_balance:.3f}")
                    print(f"   –§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —É—Å—É—à–∫–∞: {actual_shrinkage:.3f}")
                    
                    # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
                    product_data.append({
                        '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': nomenclature,
                        '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': initial_balance,
                        '–ü—Ä–∏—Ö–æ–¥': incoming if pd.notna(incoming) else 0.0,
                        '–†–∞—Å—Ö–æ–¥': outgoing if pd.notna(outgoing) else 0.0,
                        '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': final_balance,
                        '–ü–µ—Ä–∏–æ–¥_—Ö—Ä–∞–Ω–µ–Ω–∏—è_–¥–Ω–µ–π': 7  # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥
                    })
                else:
                    print("   ‚ö†Ô∏è  –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞")
                    
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç—Ä–æ–∫–∏ {index}: {str(e)}")
                continue
        
        # 4. –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–æ–π —Ä–∞—Å—á–µ—Ç–∞ —É—Å—É—à–∫–∏
        if len(product_data) > 0:
            print(f"\nüßÆ –≠—Ç–∞–ø 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–æ–π —Ä–∞—Å—á–µ—Ç–∞ —É—Å—É—à–∫–∏...")
            
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ DataFrame
            dataset = pd.DataFrame(product_data)
            print("üìä –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
            print(dataset.to_string())
            
            # –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º—É —É—Å—É—à–∫–∏
            system = ShrinkageSystem()
            system.config['use_adaptive_model'] = True
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            results = system.process_dataset(
                dataset=dataset,
                source_filename=os.path.basename(file_path),
                use_adaptive=True
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            if results['status'] == 'success':
                print("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
                
                # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                coefficients = results.get('coefficients', [])
                print(f"\nüîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤:")
                
                for i, coeff in enumerate(coefficients):
                    nomenclature = coeff.get('–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞')
                    accuracy = coeff.get('–¢–æ—á–Ω–æ—Å—Ç—å_R2', 0)
                    a_coeff = coeff.get('a', 0)
                    b_coeff = coeff.get('b', 0)
                    c_coeff = coeff.get('c', 0)
                    
                    print(f"   {i+1}. {nomenclature}")
                    print(f"      –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã: a={a_coeff:.6f}, b={b_coeff:.6f}, c={c_coeff:.6f}")
                    print(f"      –¢–æ—á–Ω–æ—Å—Ç—å (R¬≤): {accuracy:.2f}%")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                output_dir = "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"
                os.makedirs(output_dir, exist_ok=True)
                
                coefficients_file = os.path.join(output_dir, f"–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã_—É—Å—É—à–∫–∏_–ë–´–ß–ö–ò_–í–Ø–õ–ï–ù–´–ï.json")
                with open(coefficients_file, 'w', encoding='utf-8') as f:
                    json.dump(coefficients, f, ensure_ascii=False, indent=2)
                print(f"\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {coefficients_file}")
                
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {results.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
        else:
            print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {str(e)}")
        import traceback
        traceback.print_exc()


def show_file_structure():
    """–ü–æ–∫–∞–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–∞ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö."""
    print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–∞ –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 60)
    
    file_path = r"C:\Users\D_909\Desktop\–¥–ª—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞\–∏—Å—Ö–æ–¥–Ω—ã–µ_–¥–∞–Ω–Ω—ã–µ\–î–ª—è_—Ä–∞—Å—á–µ—Ç–∞_–∫–æ—ç—Ñ—Ñ\b3ded820-4385-4a42-abc7-75dc0756d335_6ba7ac50-fb1a-4bea-9489-265bdfdcb8d1_–≤—Å—è –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥ —Å 15.07.25 –ø–æ 21.07.25.xls"
    
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
        return
    
    try:
        # –ß–∏—Ç–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–æ–∫ —Ñ–∞–π–ª–∞ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        df_preview = pd.read_excel(file_path, header=None, nrows=10)
        print("–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –ø–µ—Ä–≤—ã—Ö 10 —Å—Ç—Ä–æ–∫ —Ñ–∞–π–ª–∞:")
        print(df_preview.to_string())
        
        # –ü—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        print("\nüîç –ü–æ–∏—Å–∫ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤...")
        for i, row in df_preview.iterrows():
            if '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞' in str(row.iloc[0]) or '–Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞' in str(row.iloc[0]).lower():
                print(f"üéØ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–∞–π–¥–µ–Ω—ã –≤ —Å—Ç—Ä–æ–∫–µ {i}")
                print(f"   –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: {row.tolist()}")
                break
        else:
            print("‚ÑπÔ∏è  –ó–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–µ—Ä–≤—ã—Ö 10 —Å—Ç—Ä–æ–∫–∞—Ö")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–∞: {str(e)}")


if __name__ == "__main__":
    print("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —á—Ç–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç—á–µ—Ç–∞")
    print("=" * 70)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–∞
    show_file_structure()
    
    print("\n" + "=" * 70 + "\n")
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —á—Ç–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
    demonstrate_report_reading()