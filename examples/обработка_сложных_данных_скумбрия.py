#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª–æ–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–µ –°–ö–£–ú–ë–†–ò–Ø –•/–ö —Å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π –ø–æ –ø–∞—Ä—Ç–∏—è–º
"""

import sys
import os
import pandas as pd
import json
import numpy as np

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ src –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../src')))

from core.shrinkage_system import ShrinkageSystem
from core.shrinkage_verification_system import ShrinkageVerificationSystem


def parse_complex_inventory_data():
    """–ü–∞—Ä—Å–∏–Ω–≥ —Å–ª–æ–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –°–ö–£–ú–ë–†–ò–Ø –•/–ö."""
    print("üîç –ü–∞—Ä—Å–∏–Ω–≥ —Å–ª–æ–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –°–ö–£–ú–ë–†–ò–Ø –•/–ö")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    # –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö:
    # - –ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞: –°–ö–£–ú–ë–†–ò–Ø –•/–ö
    # - –ù–∞—á–∞–ª—å–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫: 11.412
    # - –ü—Ä–∏—Ö–æ–¥: 9.070
    # - –†–∞—Å—Ö–æ–¥: 14.504
    # - –ö–æ–Ω–µ—á–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫: 5.978
    
    # –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º:
    data_entries = [
        {
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': '–°–ö–£–ú–ë–†–ò–Ø –•/–ö',
            '–î–æ–∫—É–º–µ–Ω—Ç': '–ü—Ä–∏—Ö–æ–¥–Ω–∞—è –Ω–∞–∫–ª–∞–¥–Ω–∞—è 000000000000543',
            '–î–∞—Ç–∞': '15.07.2025',
            '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 11.412,
            '–ü—Ä–∏—Ö–æ–¥': 9.070,
            '–†–∞—Å—Ö–æ–¥': 0.0,
            '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 20.482
        },
        {
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': '–°–ö–£–ú–ë–†–ò–Ø –•/–ö',
            '–î–æ–∫—É–º–µ–Ω—Ç': '–û—Ç—á–µ—Ç –æ—Ç–¥–µ–ª–∞ –æ —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∞—Ö 000000000000218',
            '–î–∞—Ç–∞': '15.07.2025',
            '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 20.482,
            '–ü—Ä–∏—Ö–æ–¥': 0.0,
            '–†–∞—Å—Ö–æ–¥': 1.104,
            '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 19.378
        },
        {
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': '–°–ö–£–ú–ë–†–ò–Ø –•/–ö',
            '–î–æ–∫—É–º–µ–Ω—Ç': '–û—Ç—á–µ—Ç –æ—Ç–¥–µ–ª–∞ –æ —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∞—Ö 000000000000219',
            '–î–∞—Ç–∞': '16.07.2025',
            '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 19.378,
            '–ü—Ä–∏—Ö–æ–¥': 0.0,
            '–†–∞—Å—Ö–æ–¥': 1.116,
            '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 18.262
        },
        {
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': '–°–ö–£–ú–ë–†–ò–Ø –•/–ö',
            '–î–æ–∫—É–º–µ–Ω—Ç': '–û—Ç—á–µ—Ç –æ—Ç–¥–µ–ª–∞ –æ —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∞—Ö 000000000000220',
            '–î–∞—Ç–∞': '17.07.2025',
            '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 18.262,
            '–ü—Ä–∏—Ö–æ–¥': 0.0,
            '–†–∞—Å—Ö–æ–¥': 1.382,
            '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 16.880
        },
        {
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': '–°–ö–£–ú–ë–†–ò–Ø –•/–ö',
            '–î–æ–∫—É–º–µ–Ω—Ç': '–û—Ç—á–µ—Ç –æ—Ç–¥–µ–ª–∞ –æ —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∞—Ö 000000000000221',
            '–î–∞—Ç–∞': '18.07.2025',
            '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 16.880,
            '–ü—Ä–∏—Ö–æ–¥': 0.0,
            '–†–∞—Å—Ö–æ–¥': 3.856,
            '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 13.024
        },
        {
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': '–°–ö–£–ú–ë–†–ò–Ø –•/–ö',
            '–î–æ–∫—É–º–µ–Ω—Ç': '–û—Ç—á–µ—Ç –æ—Ç–¥–µ–ª–∞ –æ —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∞—Ö 000000000000222',
            '–î–∞—Ç–∞': '19.07.2025',
            '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 13.024,
            '–ü—Ä–∏—Ö–æ–¥': 0.0,
            '–†–∞—Å—Ö–æ–¥': 1.576,
            '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 11.448
        },
        {
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': '–°–ö–£–ú–ë–†–ò–Ø –•/–ö',
            '–î–æ–∫—É–º–µ–Ω—Ç': '–û—Ç—á–µ—Ç –æ—Ç–¥–µ–ª–∞ –æ —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∞—Ö 000000000000223',
            '–î–∞—Ç–∞': '20.07.2025',
            '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 11.448,
            '–ü—Ä–∏—Ö–æ–¥': 0.0,
            '–†–∞—Å—Ö–æ–¥': 2.920,
            '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 8.528
        },
        {
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': '–°–ö–£–ú–ë–†–ò–Ø –•/–ö',
            '–î–æ–∫—É–º–µ–Ω—Ç': '–û—Ç—á–µ—Ç –æ—Ç–¥–µ–ª–∞ –æ —Ä–æ–∑–Ω–∏—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∞—Ö 000000000000224',
            '–î–∞—Ç–∞': '21.07.2025',
            '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 8.528,
            '–ü—Ä–∏—Ö–æ–¥': 0.0,
            '–†–∞—Å—Ö–æ–¥': 1.996,
            '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 6.532
        },
        {
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': '–°–ö–£–ú–ë–†–ò–Ø –•/–ö',
            '–î–æ–∫—É–º–µ–Ω—Ç': '–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è 000000000000158',
            '–î–∞—Ç–∞': '21.07.2025',
            '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 6.532,
            '–ü—Ä–∏—Ö–æ–¥': 0.0,
            '–†–∞—Å—Ö–æ–¥': 0.554,
            '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 5.978
        }
    ]
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ DataFrame
    df = pd.DataFrame(data_entries)
    print("üìä –î–∞–Ω–Ω—ã–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏–∏:")
    print(df.to_string(index=False))
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —É—Å—É—à–∫—É
    initial_balance = 11.412  # –ù–∞—á–∞–ª—å–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫
    total_incoming = 9.070    # –û–±—â–∏–π –ø—Ä–∏—Ö–æ–¥
    total_outgoing = 14.504   # –û–±—â–∏–π —Ä–∞—Å—Ö–æ–¥
    final_balance = 5.978     # –ö–æ–Ω–µ—á–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫
    
    theoretical_balance = initial_balance + total_incoming - total_outgoing
    actual_shrinkage = theoretical_balance - final_balance
    
    print(f"\nüßÆ –†–∞—Å—á–µ—Ç –æ–±—â–µ–π —É—Å—É—à–∫–∏:")
    print(f"   –ù–∞—á–∞–ª—å–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫: {initial_balance:.3f} –∫–≥")
    print(f"   –ü—Ä–∏—Ö–æ–¥: {total_incoming:.3f} –∫–≥")
    print(f"   –†–∞—Å—Ö–æ–¥: {total_outgoing:.3f} –∫–≥")
    print(f"   –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –±–∞–ª–∞–Ω—Å: {theoretical_balance:.3f} –∫–≥")
    print(f"   –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–Ω–µ—á–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫: {final_balance:.3f} –∫–≥")
    print(f"   –§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —É—Å—É—à–∫–∞: {actual_shrinkage:.3f} –∫–≥")
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤
    product_data = [{
        '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': '–°–ö–£–ú–ë–†–ò–Ø –•/–ö',
        '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': initial_balance,
        '–ü—Ä–∏—Ö–æ–¥': total_incoming,
        '–†–∞—Å—Ö–æ–¥': total_outgoing,
        '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': final_balance,
        '–ü–µ—Ä–∏–æ–¥_—Ö—Ä–∞–Ω–µ–Ω–∏—è_–¥–Ω–µ–π': 6  # –° 15.07 –ø–æ 21.07 = 6 –¥–Ω–µ–π
    }]
    
    return product_data


def process_scomber_data():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ —Å–∫—É–º–±—Ä–∏–∏ —Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–µ–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤."""
    print("üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –°–ö–£–ú–ë–†–ò–Ø –•/–ö —Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–µ–π")
    print("=" * 60)
    
    # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ
    product_data = parse_complex_inventory_data()
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ DataFrame
    dataset = pd.DataFrame(product_data)
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º—É —É—Å—É—à–∫–∏
    system = ShrinkageSystem()
    system.config['enable_verification'] = True
    system.config['use_adaptive_model'] = True
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    print(f"\nüßÆ –†–∞—Å—á–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ —É—Å—É—à–∫–∏...")
    results = system.process_dataset(
        dataset=dataset,
        source_filename="–°–ö–£–ú–ë–†–ò–Ø_–•–ö_–¥–∞–Ω–Ω—ã–µ.xlsx",
        use_adaptive=True
    )
    
    if results['status'] != 'success':
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {results.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
        return
    
    print("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    coefficients = results.get('coefficients', [])
    print(f"\nüîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞:")
    
    for i, coeff in enumerate(coefficients):
        nomenclature = coeff.get('–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞')
        accuracy = coeff.get('–¢–æ—á–Ω–æ—Å—Ç—å_R2', 0)
        model = coeff.get('–ú–æ–¥–µ–ª—å', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è')
        a_coeff = coeff.get('–ö–æ—ç—Ñ_a', 0)
        b_coeff = coeff.get('–ö–æ—ç—Ñ_b', 0)
        c_coeff = coeff.get('–ö–æ—ç—Ñ_c', 0)
        
        print(f"   –ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞: {nomenclature}")
        print(f"   –ú–æ–¥–µ–ª—å: {model}")
        print(f"   –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã: a={a_coeff:.6f}, b={b_coeff:.6f}, c={c_coeff:.6f}")
        print(f"   –¢–æ—á–Ω–æ—Å—Ç—å (R¬≤): {accuracy:.2f}%")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é
        verification = coeff.get('–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è', {})
        if verification:
            verification_status = verification.get('verification_status', 'unknown')
            validation_status = verification.get('validation_status', {})
            overall_status = validation_status.get('overall_status', 'unknown')
            metrics = verification.get('accuracy_metrics', {})
            
            print(f"   –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è: {overall_status.upper()}")
            print(f"   –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º–∞—è —É—Å—É—à–∫–∞: {metrics.get('predicted_shrinkage', 0):.3f} –∫–≥")
            print(f"   –§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —É—Å—É—à–∫–∞: {metrics.get('actual_shrinkage', 0):.3f} –∫–≥")
            print(f"   R¬≤ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: {metrics.get('r_squared', 0):.4f}")
        else:
            print(f"   –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è: –ù–ï–¢ –î–ê–ù–ù–´–•")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    output_dir = "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"
    os.makedirs(output_dir, exist_ok=True)
    
    coefficients_file = os.path.join(output_dir, "–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã_—É—Å—É—à–∫–∏_–°–ö–£–ú–ë–†–ò–Ø_–•–ö.json")
    with open(coefficients_file, 'w', encoding='utf-8') as f:
        json.dump(coefficients, f, ensure_ascii=False, indent=2)
    print(f"\nüíæ –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {coefficients_file}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç—ã
    reports = results.get('reports', {})
    for report_name, report_content in reports.items():
        report_file = os.path.join(output_dir, f"{report_name}_–°–ö–£–ú–ë–†–ò–Ø_–•–ö.html")
        with open(report_file, 'w', encoding='utf-8') as f:
            f.write(report_content)
        print(f"üíæ –û—Ç—á–µ—Ç '{report_name}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {report_file}")
    
    print(f"\nüéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –°–ö–£–ú–ë–†–ò–Ø –•/–ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


def demonstrate_verification_accuracy():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç–æ—á–Ω–æ—Å—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –°–ö–£–ú–ë–†–ò–Ø –•/–ö."""
    print("üîç –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç–æ—á–Ω–æ—Å—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º—É –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    verification_system = ShrinkageVerificationSystem()
    
    # –î–∞–Ω–Ω—ã–µ –ø–æ –°–ö–£–ú–ë–†–ò–Ø –•/–ö
    scomber_data = {
        'name': '–°–ö–£–ú–ë–†–ò–Ø –•/–ö',
        'initial_balance': 11.412,
        'incoming': 9.070,
        'outgoing': 14.504,
        'final_balance': 5.978,
        'storage_days': 6
    }
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∞–∫—Ç–∏—á–µ—Å–∫—É—é —É—Å—É—à–∫—É
    theoretical_balance = scomber_data['initial_balance'] + scomber_data['incoming'] - scomber_data['outgoing']
    actual_shrinkage = theoretical_balance - scomber_data['final_balance']
    
    print(f"üìä –î–∞–Ω–Ω—ã–µ –ø–æ –°–ö–£–ú–ë–†–ò–Ø –•/–ö:")
    print(f"   –ù–∞—á–∞–ª—å–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫: {scomber_data['initial_balance']:.3f} –∫–≥")
    print(f"   –ü—Ä–∏—Ö–æ–¥: {scomber_data['incoming']:.3f} –∫–≥")
    print(f"   –†–∞—Å—Ö–æ–¥: {scomber_data['outgoing']:.3f} –∫–≥")
    print(f"   –ö–æ–Ω–µ—á–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫: {scomber_data['final_balance']:.3f} –∫–≥")
    print(f"   –§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —É—Å—É—à–∫–∞: {actual_shrinkage:.3f} –∫–≥")
    
    # –ü—Ä–∏–º–µ—Ä –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ (—Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–æ–π)
    scomber_coefficients = {
        'model_type': 'exponential',
        'coefficients': {
            'a': 0.035,   # 3.5% –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —É—Å—É—à–∫–∞ (–ø–æ–≤—ã—à–µ–Ω–Ω–∞—è –¥–ª—è —Å–∫—É–º–±—Ä–∏–∏)
            'b': 0.06,    # –°–∫–æ—Ä–æ—Å—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –º–∞–∫—Å–∏–º—É–º–∞
            'c': 0.002    # –õ–∏–Ω–µ–π–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        },
        'r_squared': 0.94
    }
    
    print(f"\nüßÆ –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã:")
    coeffs = scomber_coefficients['coefficients']
    print(f"   –ú–æ–¥–µ–ª—å: {scomber_coefficients['model_type']}")
    print(f"   a = {coeffs['a']:.4f} (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —É—Å—É—à–∫–∞)")
    print(f"   b = {coeffs['b']:.4f} (—Å–∫–æ—Ä–æ—Å—Ç—å —É—Å—É—à–∫–∏)")
    print(f"   c = {coeffs['c']:.4f} (–ª–∏–Ω–µ–π–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç)")
    print(f"   R¬≤ = {scomber_coefficients['r_squared']:.4f}")
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é
    print(f"\nüîç –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
    verification_results = verification_system.verify_coefficients_accuracy(scomber_data, scomber_coefficients)
    
    if verification_results['verification_status'] == 'success':
        metrics = verification_results['accuracy_metrics']
        validation = verification_results['validation_status']
        
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:")
        print(f"   –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º–∞—è —É—Å—É—à–∫–∞: {metrics['predicted_shrinkage']:.3f} –∫–≥")
        print(f"   –§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —É—Å—É—à–∫–∞: {metrics['actual_shrinkage']:.3f} –∫–≥")
        print(f"   –†–∞–∑–Ω–∏—Ü–∞: {metrics['difference']:.3f} –∫–≥")
        print(f"   R¬≤ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: {metrics['r_squared']:.4f}")
        print(f"   –°—Ç–∞—Ç—É—Å: {validation['overall_status'].upper()}")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        report = verification_system.generate_verification_report(verification_results)
        print(f"\nüìÑ –û—Ç—á–µ—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:")
        print(report)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
        output_dir = "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"
        os.makedirs(output_dir, exist_ok=True)
        report_file = os.path.join(output_dir, "–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è_–°–ö–£–ú–ë–†–ò–Ø_–•–ö.txt")
        with open(report_file, 'w', encoding='utf-8') as f:
            f.write(report)
        print(f"\nüíæ –û—Ç—á–µ—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {report_file}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: {verification_results.get('error_message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")


if __name__ == "__main__":
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —Å–∫—É–º–±—Ä–∏–∏
    process_scomber_data()
    
    print("\n" + "="*70 + "\n")
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é
    demonstrate_verification_accuracy()