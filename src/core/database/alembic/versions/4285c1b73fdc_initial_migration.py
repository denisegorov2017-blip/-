"""Initial migration

Revision ID: 4285c1b73fdc
Revises: 
Create Date: 2025-08-29 15:14:13.740818

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4285c1b73fdc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_patterns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pattern_type', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('confidence_level', sa.Float(), nullable=True),
    sa.Column('affected_nomenclature', sa.String(), nullable=True),
    sa.Column('discovery_date', sa.DateTime(), nullable=True),
    sa.Column('pattern_data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feedback_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('feedback_frequency', sa.String(), nullable=True),
    sa.Column('auto_confirm_threshold', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ml_model_registry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_name', sa.String(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('algorithm_type', sa.String(), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('training_date', sa.DateTime(), nullable=True),
    sa.Column('accuracy_metrics', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('model_type', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nomenclature',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('product_type', sa.String(), nullable=True),
    sa.Column('product_type_code', sa.String(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('validation_flags', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('priority_periods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('period_start', sa.DateTime(), nullable=True),
    sa.Column('period_end', sa.DateTime(), nullable=True),
    sa.Column('priority_level', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('source_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('upload_date', sa.DateTime(), nullable=True),
    sa.Column('file_hash', sa.String(), nullable=True),
    sa.Column('processed', sa.Boolean(), nullable=True),
    sa.Column('quality_score', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('analytics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nomenclature_id', sa.Integer(), nullable=True),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('avg_accuracy', sa.Float(), nullable=True),
    sa.Column('total_calculations', sa.Integer(), nullable=True),
    sa.Column('period_start', sa.DateTime(), nullable=True),
    sa.Column('period_end', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ),
    sa.ForeignKeyConstraint(['nomenclature_id'], ['nomenclature.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('calculation_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_data_id', sa.Integer(), nullable=True),
    sa.Column('nomenclature_id', sa.Integer(), nullable=True),
    sa.Column('initial_balance', sa.Float(), nullable=True),
    sa.Column('incoming', sa.Float(), nullable=True),
    sa.Column('outgoing', sa.Float(), nullable=True),
    sa.Column('final_balance', sa.Float(), nullable=True),
    sa.Column('storage_days', sa.Integer(), nullable=True),
    sa.Column('calculation_date', sa.DateTime(), nullable=True),
    sa.Column('data_quality_flag', sa.String(), nullable=True),
    sa.Column('inventory_confidence', sa.Float(), nullable=True),
    sa.Column('inventory_period_start', sa.DateTime(), nullable=True),
    sa.Column('inventory_period_end', sa.DateTime(), nullable=True),
    sa.Column('is_valid_inventory_period', sa.Boolean(), nullable=True),
    sa.Column('is_preliminary_forecast', sa.Boolean(), nullable=True),
    sa.Column('preliminary_period_end', sa.DateTime(), nullable=True),
    sa.Column('human_error_probability', sa.Float(), nullable=True),
    sa.Column('validation_errors', sa.Text(), nullable=True),
    sa.Column('manual_review_required', sa.Boolean(), nullable=True),
    sa.Column('pre_shrinkage_days', sa.Integer(), nullable=True),
    sa.Column('pre_shrinkage_amount', sa.Float(), nullable=True),
    sa.Column('adjusted_shrinkage_rate', sa.Float(), nullable=True),
    sa.Column('inventory_shrinkage_total', sa.Float(), nullable=True),
    sa.Column('actual_deduction_batch', sa.String(), nullable=True),
    sa.Column('fifo_principle_applied', sa.Boolean(), nullable=True),
    sa.Column('fifo_batch_sequence', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['nomenclature_id'], ['nomenclature.id'], ),
    sa.ForeignKeyConstraint(['source_data_id'], ['source_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('surplus_recommendations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nomenclature_id', sa.Integer(), nullable=True),
    sa.Column('recommended_surplus_percentage', sa.Float(), nullable=True),
    sa.Column('confidence_level', sa.Float(), nullable=True),
    sa.Column('analysis_period_start', sa.DateTime(), nullable=True),
    sa.Column('analysis_period_end', sa.DateTime(), nullable=True),
    sa.Column('calculation_method', sa.String(), nullable=True),
    sa.Column('supporting_data', sa.JSON(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('is_accepted', sa.Boolean(), nullable=True),
    sa.Column('acceptance_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['nomenclature_id'], ['nomenclature.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('surplus_specifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nomenclature_id', sa.Integer(), nullable=True),
    sa.Column('surplus_percentage', sa.Float(), nullable=True),
    sa.Column('specification_start_date', sa.DateTime(), nullable=True),
    sa.Column('specification_end_date', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['nomenclature_id'], ['nomenclature.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coefficients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('calculation_data_id', sa.Integer(), nullable=True),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('coefficient_a', sa.Float(), nullable=True),
    sa.Column('coefficient_b', sa.Float(), nullable=True),
    sa.Column('coefficient_c', sa.Float(), nullable=True),
    sa.Column('accuracy_r2', sa.Float(), nullable=True),
    sa.Column('calculation_date', sa.DateTime(), nullable=True),
    sa.Column('adjusted_for_pre_shrinkage', sa.Boolean(), nullable=True),
    sa.Column('pre_shrinkage_factor', sa.Float(), nullable=True),
    sa.Column('effective_shrinkage_rate', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['calculation_data_id'], ['calculation_data.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('data_lineage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_file_id', sa.Integer(), nullable=True),
    sa.Column('calculation_data_id', sa.Integer(), nullable=True),
    sa.Column('process_name', sa.String(), nullable=True),
    sa.Column('process_timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('input_records', sa.Integer(), nullable=True),
    sa.Column('output_records', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('execution_time_ms', sa.Integer(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['calculation_data_id'], ['calculation_data.id'], ),
    sa.ForeignKeyConstraint(['source_file_id'], ['source_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('preliminary_forecasts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('calculation_data_id', sa.Integer(), nullable=True),
    sa.Column('forecast_model_id', sa.Integer(), nullable=True),
    sa.Column('forecast_period_days', sa.Integer(), nullable=True),
    sa.Column('expected_shrinkage', sa.Float(), nullable=True),
    sa.Column('confidence_level', sa.Float(), nullable=True),
    sa.Column('forecast_date', sa.DateTime(), nullable=True),
    sa.Column('actual_shrinkage', sa.Float(), nullable=True),
    sa.Column('forecast_accuracy', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('pre_shrinkage_adjusted', sa.Boolean(), nullable=True),
    sa.Column('adjusted_expected_shrinkage', sa.Float(), nullable=True),
    sa.Column('batch_storage_history', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['calculation_data_id'], ['calculation_data.id'], ),
    sa.ForeignKeyConstraint(['forecast_model_id'], ['models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('surplus_patterns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nomenclature_id', sa.Integer(), nullable=True),
    sa.Column('product_type', sa.String(), nullable=True),
    sa.Column('surplus_percentage', sa.Float(), nullable=True),
    sa.Column('pattern_condition', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('created_from_recommendation_id', sa.Integer(), nullable=True),
    sa.Column('validation_count', sa.Integer(), nullable=True),
    sa.Column('last_validated_date', sa.DateTime(), nullable=True),
    sa.Column('confidence_level', sa.Float(), nullable=True),
    sa.Column('feedback_count', sa.Integer(), nullable=True),
    sa.Column('last_feedback_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_from_recommendation_id'], ['surplus_recommendations.id'], ),
    sa.ForeignKeyConstraint(['nomenclature_id'], ['nomenclature.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('validation_errors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('calculation_data_id', sa.Integer(), nullable=True),
    sa.Column('error_type', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('severity_level', sa.String(), nullable=True),
    sa.Column('detected_by', sa.String(), nullable=True),
    sa.Column('detection_date', sa.DateTime(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=True),
    sa.Column('resolution_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['calculation_data_id'], ['calculation_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('forecasts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coefficient_id', sa.Integer(), nullable=True),
    sa.Column('forecast_value', sa.Float(), nullable=True),
    sa.Column('actual_value', sa.Float(), nullable=True),
    sa.Column('deviation', sa.Float(), nullable=True),
    sa.Column('forecast_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['coefficient_id'], ['coefficients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pattern_validations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('surplus_pattern_id', sa.Integer(), nullable=True),
    sa.Column('validation_date', sa.DateTime(), nullable=True),
    sa.Column('actual_surplus_percentage', sa.Float(), nullable=True),
    sa.Column('predicted_surplus_percentage', sa.Float(), nullable=True),
    sa.Column('deviation', sa.Float(), nullable=True),
    sa.Column('validation_result', sa.String(), nullable=True),
    sa.Column('user_feedback', sa.Text(), nullable=True),
    sa.Column('is_confirmed', sa.Boolean(), nullable=True),
    sa.Column('confirmation_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['surplus_pattern_id'], ['surplus_patterns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pattern_validations')
    op.drop_table('forecasts')
    op.drop_table('validation_errors')
    op.drop_table('surplus_patterns')
    op.drop_table('preliminary_forecasts')
    op.drop_table('data_lineage')
    op.drop_table('coefficients')
    op.drop_table('surplus_specifications')
    op.drop_table('surplus_recommendations')
    op.drop_table('calculation_data')
    op.drop_table('analytics')
    op.drop_table('source_data')
    op.drop_table('priority_periods')
    op.drop_table('nomenclature')
    op.drop_table('models')
    op.drop_table('ml_model_registry')
    op.drop_table('feedback_preferences')
    op.drop_table('ai_patterns')
    # ### end Alembic commands ###