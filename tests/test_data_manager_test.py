#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
"""

import sys
import os
import tempfile
import shutil
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
project_root = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
if project_root not in sys.path:
    sys.path.insert(0, project_root)

from src.core.test_data_manager import TestDataManager


def test_test_data_manager():
    """–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö."""
    print("üîß –¢–µ—Å—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ—Å—Ç–∞
    with tempfile.TemporaryDirectory() as temp_dir:
        print(f"üìÇ –í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {temp_dir}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
        test_files = [
            "test_data_1.json",
            "sample_data.xlsx",
            "—Ç–µ—Å—Ç_–¥–∞–Ω–Ω—ã–µ.csv"
        ]
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
        for filename in test_files:
            file_path = os.path.join(temp_dir, filename)
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(f"–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–∞–π–ª–∞ {filename}")
        
        # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø—É—Å—Ç—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
        empty_dir_path = os.path.join(temp_dir, "–ø—É—Å—Ç–∞—è_–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è")
        os.makedirs(empty_dir_path, exist_ok=True)
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        manager = TestDataManager(temp_dir)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
        assert os.path.exists(manager.test_subdir), "–ü–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å–æ–∑–¥–∞–Ω–∞"
        assert os.path.exists(manager.real_data_subdir), "–ü–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å–æ–∑–¥–∞–Ω–∞"
        print("‚úÖ –ü–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –û—Ä–≥–∞–Ω–∏–∑—É–µ–º —Ñ–∞–π–ª—ã
        print("üìÇ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤...")
        manager.organize_existing_files()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
        test_files_moved = os.listdir(manager.test_subdir)
        
        print(f"   –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã: {test_files_moved}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ
        for filename in test_files:
            assert filename in test_files_moved, f"–§–∞–π–ª {filename} –Ω–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ —Ç–µ—Å—Ç–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"
        
        print("‚úÖ –§–∞–π–ª—ã –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = manager.get_test_data_stats()
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
        
        assert stats['test_files_count'] == 3, f"–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤: {stats['test_files_count']}"
        
        print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—á–∏—Å—Ç–∫—É —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        print("üóëÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        old_file_path = os.path.join(manager.test_subdir, "old_test_file.txt")
        with open(old_file_path, 'w', encoding='utf-8') as f:
            f.write("–°—Ç–∞—Ä—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª")
        
        # –ú–µ–Ω—è–µ–º –≤—Ä–µ–º—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞ –Ω–∞ 10 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
        old_time = (datetime.now() - timedelta(days=10)).timestamp()
        os.utime(old_file_path, (old_time, old_time))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        assert os.path.exists(old_file_path), "–°—Ç–∞—Ä—ã–π —Ñ–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω"
        
        # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ (—Ñ–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
        manager.cleanup_old_test_data(days_old=7)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω
        assert not os.path.exists(old_file_path), "–°—Ç–∞—Ä—ã–π —Ñ–∞–π–ª –Ω–µ —É–¥–∞–ª–µ–Ω"
        print("‚úÖ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
        print("üóëÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—É—Å—Ç—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...")
        # –°–æ–∑–¥–∞–µ–º –µ—â–µ –æ–¥–Ω—É –ø—É—Å—Ç—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        another_empty_dir = os.path.join(temp_dir, "another_empty_dir")
        os.makedirs(another_empty_dir, exist_ok=True)
        
        # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        assert os.path.exists(another_empty_dir), "–ü—É—Å—Ç–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —Å–æ–∑–¥–∞–Ω–∞"
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –æ—á–∏—Å—Ç–∫—É, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–ª–∂–Ω–∞ —É–¥–∞–ª–∏—Ç—å –ø—É—Å—Ç—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        manager._remove_empty_directories()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—É—Å—Ç–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞
        assert not os.path.exists(another_empty_dir), "–ü—É—Å—Ç–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —É–¥–∞–ª–µ–Ω–∞"
        print("‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")


if __name__ == "__main__":
    test_test_data_manager()