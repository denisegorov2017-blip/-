#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã ShrinkageSystem.

–≠—Ç–æ—Ç —Ç–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –ø—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ `process_dataset` –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç
–Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ, –≥–¥–µ ShrinkageSystem —è–≤–ª—è–µ—Ç—Å—è –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.
"""

import sys
import os
import pandas as pd

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º ShrinkageSystem –∏–∑ –Ω–æ–≤–æ–≥–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è
from src.core.shrinkage_system import ShrinkageSystem

def test_refactored_shrinkage_system():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ process_dataset."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã ShrinkageSystem")
    print("=" * 60)
    
    # 1. –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º—É. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
    system = ShrinkageSystem()
    
    # 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –∏–∑–ª–∏—à–∫–∞ (5%) –¥–ª—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π –º–æ–¥–µ–ª–∏
    surplus_rate = 0.05
    system.set_surplus_rate(surplus_rate)
    print(f"üìä –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≥–ª–æ–±–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –∏–∑–ª–∏—à–∫–∞: {surplus_rate*100:.1f}%")
    
    # 3. –ì–æ—Ç–æ–≤–∏–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    # –ü—Ä–∏—Ö–æ–¥ 50, —Å –∏–∑–ª–∏—à–∫–æ–º 5% —ç—Ç–æ 50 * 1.05 = 52.5
    # –ë–∞–ª–∞–Ω—Å = 100 (–Ω–∞—á) + 52.5 (–ø—Ä–∏—Ö–æ–¥ —Å –∏–∑–ª–∏—à–∫–æ–º) - 20 (—Ä–∞—Å—Ö–æ–¥) = 132.5
    # –£—Å—É—à–∫–∞ = 132.5 - 128 (–∫–æ–Ω–µ—á–Ω—ã–π) = 4.5
    test_data = [
        {
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞': '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç',
            '–ù–∞—á–∞–ª—å–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 100.0,
            '–ü—Ä–∏—Ö–æ–¥': 50.0,
            '–†–∞—Å—Ö–æ–¥': 20.0,
            '–ö–æ–Ω–µ—á–Ω—ã–π_–æ—Å—Ç–∞—Ç–æ–∫': 128.0,
            '–ü–µ—Ä–∏–æ–¥_—Ö—Ä–∞–Ω–µ–Ω–∏—è_–¥–Ω–µ–π': 7
        }
    ]
    dataset = pd.DataFrame(test_data)
    
    print("\nüìä –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞:")
    print(dataset.to_string())
    
    # 4. –í—ã–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—ã–π –ø—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ —Å–∏—Å—Ç–µ–º—ã
    print("\nüöÄ –ó–∞–ø—É—Å–∫ system.process_dataset(...) —Å –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π –º–æ–¥–µ–ª—å—é...")
    results = system.process_dataset(
        dataset=dataset,
        source_filename="test_run.xlsx",
        use_adaptive=True
    )
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å –ø–æ–º–æ—â—å—é assert
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")
    
    assert results is not None, "–†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å None"
    print("  ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–µ–Ω.")
    
    assert results['status'] == 'success', f"–°—Ç–∞—Ç—É—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 'success', –∞ –Ω–µ '{results['status']}'"
    print(f"  ‚úÖ –°—Ç–∞—Ç—É—Å: {results['status']}")
    
    assert 'coefficients' in results and len(results['coefficients']) == 1, "–î–æ–ª–∂–µ–Ω –±—ã—Ç—å 1 —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤"
    print("  ‚úÖ –ù–∞–π–¥–µ–Ω 1 –Ω–∞–±–æ—Ä –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤.")
    
    result = results['coefficients'][0]
    accuracy = result.get('–¢–æ—á–Ω–æ—Å—Ç—å', 0)
    
    # –í –¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–µ –º–æ–¥–µ–ª—å –¥–æ–ª–∂–Ω–∞ –∏–¥–µ–∞–ª—å–Ω–æ —Å–æ–π—Ç–∏—Å—å
    assert accuracy > 99.0, f"–¢–æ—á–Ω–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å > 99%, –∞ –æ–Ω–∞ {accuracy:.1f}%"
    print(f"  ‚úÖ –¢–æ—á–Ω–æ—Å—Ç—å —Ä–∞—Å—á–µ—Ç–∞: {accuracy:.1f}% (–ø—Ä–æ–π–¥–µ–Ω–æ)")
    
    assert result.get('–£—á–µ—Ç_–∏–∑–ª–∏—à–∫–∞') == f"{surplus_rate*100:.1f}%", "–í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–∫–∞–∑–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –∏–∑–ª–∏—à–∫–∞"
    print(f"  ‚úÖ –£—á–µ—Ç –∏–∑–ª–∏—à–∫–∞: {result.get('–£—á–µ—Ç_–∏–∑–ª–∏—à–∫–∞')}")

    print("\nüéâ –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")