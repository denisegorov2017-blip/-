#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ —É—Å—É—à–∫–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π
"""

import sys
import os
import json
import pandas as pd

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from src.core.excel_hierarchy_preserver import ExcelHierarchyPreserver, json_to_excel
from src.core.json_parser import parse_from_json
from src.core.shrinkage_system import ShrinkageSystem

def test_full_system():
    """–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã."""
    print("üöÄ –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ —É—Å—É—à–∫–∏")
    print("=" * 60)
    
    # –ü—É—Ç—å –∫ —Ç–µ—Å—Ç–æ–≤–æ–º—É —Ñ–∞–π–ª—É
    test_excel_file = "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/b3ded820-4385-4a42-abc7-75dc0756d335_6ba7ac50-fb1a-4bea-9489-265bdfdcb8d1_–≤—Å—è –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥ —Å 15.07.25 –ø–æ 21.07.25.xlsx"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
    if not os.path.exists(test_excel_file):
        print(f"‚ùå –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {test_excel_file}")
        return False
    
    print(f"üìÇ –†–∞–±–æ—Ç–∞–µ–º —Å —Ñ–∞–π–ª–æ–º: {test_excel_file}")
    
    # 1. –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Excel
    print("\nüìã 1. –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Excel...")
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º Excel –≤ JSON
    json_file = "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/full_test.json"
    try:
        preserver = ExcelHierarchyPreserver(test_excel_file)
        if preserver.to_json(json_file):
            print("‚úÖ Excel ‚Üí JSON: –£–°–ü–ï–®–ù–û")
        else:
            print("‚ùå Excel ‚Üí JSON: –û–®–ò–ë–ö–ê")
            return False
    except Exception as e:
        print(f"‚ùå Excel ‚Üí JSON: –û–®–ò–ë–ö–ê - {e}")
        return False
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º JSON –æ–±—Ä–∞—Ç–Ω–æ –≤ Excel
    restored_excel_file = "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/full_test_restored.xlsx"
    try:
        if json_to_excel(json_file, restored_excel_file):
            print("‚úÖ JSON ‚Üí Excel: –£–°–ü–ï–®–ù–û")
        else:
            print("‚ùå JSON ‚Üí Excel: –û–®–ò–ë–ö–ê")
            return False
    except Exception as e:
        print(f"‚ùå JSON ‚Üí Excel: –û–®–ò–ë–ö–ê - {e}")
        return False
    
    # 2. –¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –≤ DataFrame
    print("\nüìã 2. –¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –≤ DataFrame...")
    try:
        dataframe = parse_from_json(json_file)
        if not dataframe.empty:
            print(f"‚úÖ JSON ‚Üí DataFrame: –£–°–ü–ï–®–ù–û ({len(dataframe)} —Å—Ç—Ä–æ–∫)")
        else:
            print("‚ùå JSON ‚Üí DataFrame: –û–®–ò–ë–ö–ê (–ø—É—Å—Ç–æ–π DataFrame)")
            return False
    except Exception as e:
        print(f"‚ùå JSON ‚Üí DataFrame: –û–®–ò–ë–ö–ê - {e}")
        return False
    
    # 3. –¢–µ—Å—Ç —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ —É—Å—É—à–∫–∏
    print("\nüìã 3. –¢–µ—Å—Ç —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ —É—Å—É—à–∫–∏...")
    try:
        system = ShrinkageSystem()
        results = system.process_dataset(dataframe, "full_test.json", use_adaptive=True)
        if results['status'] == 'success':
            print(f"‚úÖ –†–∞—Å—á–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤: –£–°–ü–ï–®–ù–û ({len(results['coefficients'])} –∑–∞–ø–∏—Å–µ–π)")
            print(f"   –°—Ä–µ–¥–Ω—è—è —Ç–æ—á–Ω–æ—Å—Ç—å: {results['summary']['avg_accuracy']:.2f}%")
        else:
            print(f"‚ùå –†–∞—Å—á–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤: –û–®–ò–ë–ö–ê - {results['message']}")
            return False
    except Exception as e:
        print(f"‚ùå –†–∞—Å—á–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤: –û–®–ò–ë–ö–ê - {e}")
        return False
    
    # 4. –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print("\nüìã 4. –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")
    try:
        results_file = "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/full_test_results.json"
        with open(results_file, 'w', encoding='utf-8') as f:
            json.dump(results, f, ensure_ascii=False, indent=2)
        print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: –£–°–ü–ï–®–ù–û ({results_file})")
    except Exception as e:
        print(f"‚ùå –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: –û–®–ò–ë–ö–ê - {e}")
        return False
    
    print("\n" + "=" * 60)
    print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    print("=" * 60)
    
    print("\nüìä –†–ï–ó–Æ–ú–ï:")
    print("   ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Excel")
    print("   ‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ JSON –≤ DataFrame")
    print("   ‚úÖ –†–∞—Å—á–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ —É—Å—É—à–∫–∏")
    print("   ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    try:
        success = test_full_system()
        if success:
            print("\nüéä –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú! –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print("   –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        else:
            print("\n‚ùå –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–≤–∞–ª–µ–Ω!")
            print("   –û–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    main()