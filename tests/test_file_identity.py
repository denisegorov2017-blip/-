#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ Excel —Ñ–∞–π–ª–æ–≤
"""

import sys
import os
import json
import pandas as pd
from openpyxl import load_workbook

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from src.core.excel_hierarchy_preserver import ExcelHierarchyPreserver, json_to_excel

def compare_excel_files_detailed(file1, file2):
    """–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–≤—É—Ö Excel —Ñ–∞–π–ª–æ–≤ –¥–µ—Ç–∞–ª—å–Ω–æ."""
    try:
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é pandas
        xl1 = pd.ExcelFile(file1)
        xl2 = pd.ExcelFile(file2)
        
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∏–º–µ–Ω–∞ –ª–∏—Å—Ç–æ–≤
        if xl1.sheet_names != xl2.sheet_names:
            print(f"‚ùå –ò–º–µ–Ω–∞ –ª–∏—Å—Ç–æ–≤ —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è: {xl1.sheet_names} vs {xl2.sheet_names}")
            return False
        
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–∞–∂–¥–æ–≥–æ –ª–∏—Å—Ç–∞
        for sheet_name in xl1.sheet_names:
            df1 = xl1.parse(sheet_name, header=None)
            df2 = xl2.parse(sheet_name, header=None)
            
            # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã
            if df1.shape != df2.shape:
                print(f"‚ùå –†–∞–∑–º–µ—Ä—ã –ª–∏—Å—Ç–∞ '{sheet_name}' —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è: {df1.shape} vs {df2.shape}")
                return False
            
            # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            if not df1.equals(df2):
                print(f"‚ùå –î–∞–Ω–Ω—ã–µ –ª–∏—Å—Ç–∞ '{sheet_name}' —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è")
                # –ü–æ–∫–∞–∂–µ–º —Ä–∞–∑–ª–∏—á–∏—è
                try:
                    diff = df1.compare(df2)
                    if not diff.empty:
                        print(f"   –ü—Ä–∏–º–µ—Ä —Ä–∞–∑–ª–∏—á–∏–π:\n{diff.head()}")
                except Exception:
                    # –ï—Å–ª–∏ compare –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–æ—ç–ª–µ–º–µ–Ω—Ç–Ω–æ
                    for i in range(min(len(df1), len(df2))):
                        for j in range(min(len(df1.columns), len(df2.columns))):
                            if df1.iat[i, j] != df2.iat[i, j]:
                                print(f"   –†–∞–∑–ª–∏—á–∏–µ –≤ —è—á–µ–π–∫–µ [{i}, {j}]: {df1.iat[i, j]} vs {df2.iat[i, j]}")
                                return False
                return False
        
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É –∏ –¥—Ä—É–≥–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ —Å –ø–æ–º–æ—â—å—é openpyxl
        wb1 = load_workbook(file1)
        wb2 = load_workbook(file2)
        
        for sheet_name in wb1.sheetnames:
            ws1 = wb1[sheet_name]
            ws2 = wb2[sheet_name]
            
            # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —É—Ä–æ–≤–Ω–∏ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ —Å—Ç—Ä–æ–∫
            row_groups1 = {row_num: (row_dim.outline_level, getattr(row_dim, 'hidden', False))
                          for row_num, row_dim in ws1.row_dimensions.items() 
                          if row_dim.outline_level > 0}
            row_groups2 = {row_num: (row_dim.outline_level, getattr(row_dim, 'hidden', False))
                          for row_num, row_dim in ws2.row_dimensions.items() 
                          if row_dim.outline_level > 0}
            
            if row_groups1 != row_groups2:
                print(f"‚ùå –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Å—Ç—Ä–æ–∫ –ª–∏—Å—Ç–∞ '{sheet_name}' —Ä–∞–∑–ª–∏—á–∞–µ—Ç—Å—è")
                print(f"   –û—Ä–∏–≥–∏–Ω–∞–ª: {row_groups1}")
                print(f"   –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π: {row_groups2}")
                wb1.close()
                wb2.close()
                return False
            
            # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —É—Ä–æ–≤–Ω–∏ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤
            col_groups1 = {col_letter: (col_dim.outline_level, getattr(col_dim, 'hidden', False))
                          for col_letter, col_dim in ws1.column_dimensions.items() 
                          if col_dim.outline_level > 0}
            col_groups2 = {col_letter: (col_dim.outline_level, getattr(col_dim, 'hidden', False))
                          for col_letter, col_dim in ws2.column_dimensions.items() 
                          if col_dim.outline_level > 0}
            
            if col_groups1 != col_groups2:
                print(f"‚ùå –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Å—Ç–æ–ª–±—Ü–æ–≤ –ª–∏—Å—Ç–∞ '{sheet_name}' —Ä–∞–∑–ª–∏—á–∞–µ—Ç—Å—è")
                print(f"   –û—Ä–∏–≥–∏–Ω–∞–ª: {col_groups1}")
                print(f"   –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π: {col_groups2}")
                wb1.close()
                wb2.close()
                return False
            
            # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ —è—á–µ–π–∫–∏
            merged1 = set(str(rng) for rng in ws1.merged_cells.ranges)
            merged2 = set(str(rng) for rng in ws2.merged_cells.ranges)
            
            if merged1 != merged2:
                print(f"‚ùå –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ —è—á–µ–π–∫–∏ –ª–∏—Å—Ç–∞ '{sheet_name}' —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è")
                print(f"   –û—Ä–∏–≥–∏–Ω–∞–ª: {merged1}")
                print(f"   –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π: {merged2}")
                wb1.close()
                wb2.close()
                return False
        
        wb1.close()
        wb2.close()
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_file_identity():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ Excel —Ñ–∞–π–ª–æ–≤."""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ Excel —Ñ–∞–π–ª–æ–≤")
    print("=" * 70)
    
    # –ü—É—Ç—å –∫ —Ç–µ—Å—Ç–æ–≤–æ–º—É —Ñ–∞–π–ª—É
    test_excel_file = "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/b3ded820-4385-4a42-abc7-75dc0756d335_6ba7ac50-fb1a-4bea-9489-265bdfdcb8d1_–≤—Å—è –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥ —Å 15.07.25 –ø–æ 21.07.25.xlsx"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
    if not os.path.exists(test_excel_file):
        print(f"‚ùå –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {test_excel_file}")
        return False
    
    print(f"üìÇ –†–∞–±–æ—Ç–∞–µ–º —Å —Ñ–∞–π–ª–æ–º: {test_excel_file}")
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º Excel –≤ JSON
    json_file = "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/test_identity.json"
    print("\nüîÑ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ Excel ‚Üí JSON...")
    
    try:
        preserver = ExcelHierarchyPreserver(test_excel_file)
        if preserver.to_json(json_file):
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ! JSON —Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {json_file}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è Excel ‚Üí JSON")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º JSON –æ–±—Ä–∞—Ç–Ω–æ –≤ Excel
    restored_excel_file = "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/test_identity_restored.xlsx"
    print("\nüîÑ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ JSON ‚Üí Excel...")
    
    try:
        if json_to_excel(json_file, restored_excel_file):
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ! –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π Excel —Ñ–∞–π–ª: {restored_excel_file}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–æ–≤
    print("\nüîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–æ–≤...")
    if compare_excel_files_detailed(test_excel_file, restored_excel_file):
        print("\nüéâ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–æ–≤ –∏–¥–µ–Ω—Ç–∏—á–Ω–æ!")
        return True
    else:
        print("\n‚ùå –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–æ–≤ —Ä–∞–∑–ª–∏—á–∞–µ—Ç—Å—è.")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    try:
        success = test_file_identity()
        if success:
            print("\n‚úÖ –¢–µ—Å—Ç –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print("   –ò—Å—Ö–æ–¥–Ω—ã–π –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π Excel —Ñ–∞–π–ª—ã –∏–¥–µ–Ω—Ç–∏—á–Ω—ã –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ.")
        else:
            print("\n‚ùå –¢–µ—Å—Ç –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–≤–∞–ª–µ–Ω!")
            print("   –ò—Å—Ö–æ–¥–Ω—ã–π –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π Excel —Ñ–∞–π–ª—ã —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è.")
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    main()