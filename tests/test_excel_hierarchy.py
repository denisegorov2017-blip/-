#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–µ—Ä–∞—Ä—Ö–∏–∏ Excel —Ñ–∞–π–ª–æ–≤
"""

import sys
import os
import pandas as pd
import json
from pathlib import Path

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ –Ω–æ–≤—ã–µ –º–æ–¥—É–ª–∏
# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from src.core.excel_toolkit import ExcelProcessor, json_to_excel
from src.core.excel_hierarchy_preserver import ExcelHierarchyPreserver, json_to_excel as preserver_json_to_excel


def create_test_excel_file(filename: str = "test_hierarchy.xlsx") -> str:
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π Excel —Ñ–∞–π–ª —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ª–∏—Å—Ç–∞–º–∏."""
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    data1 = {
        'A': [1, 2, 3, 4],
        'B': ['–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å'],
        'C': [100, 200, 150, 300]
    }
    
    data2 = {
        'X': [10, 20, 30],
        'Y': ['–ö—Ä–∞—Å–Ω—ã–π', '–ó–µ–ª–µ–Ω—ã–π', '–°–∏–Ω–∏–π'],
        'Z': [5.5, 7.2, 3.8]
    }
    
    # –°–æ–∑–¥–∞–µ–º DataFrame
    df1 = pd.DataFrame(data1)
    df2 = pd.DataFrame(data2)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Excel —Ñ–∞–π–ª —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ª–∏—Å—Ç–∞–º–∏
    with pd.ExcelWriter(filename, engine='openpyxl') as writer:
        df1.to_excel(writer, sheet_name='–ü—Ä–æ–¥–∞–∂–∏', index=False)
        df2.to_excel(writer, sheet_name='–¶–≤–µ—Ç–∞', index=False)
    
    return filename


def test_excel_processor():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ExcelProcessor —Å –Ω–æ–≤—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ExcelProcessor")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    test_file = create_test_excel_file("—Ç–µ—Å—Ç–æ–≤—ã–π_—Ñ–∞–π–ª.xlsx")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä
        processor = ExcelProcessor(test_file)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
        print(f"‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω: {test_file}")
        print(f"‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏—Å—Ç–æ–≤: {len(processor.sheet_names)}")
        print(f"‚úÖ –ò–º–µ–Ω–∞ –ª–∏—Å—Ç–æ–≤: {processor.sheet_names}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–¥–∫—É
        summary = processor.get_data_summary()
        print(f"‚úÖ –°–≤–æ–¥–∫–∞ –ø–æ —Ñ–∞–π–ª—É:")
        print(f"   –í—Å–µ–≥–æ –ª–∏—Å—Ç–æ–≤: {summary['total_sheets']}")
        
        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ JSON
        json_output = "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/—Ç–µ—Å—Ç_–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞.json"
        os.makedirs(os.path.dirname(json_output), exist_ok=True)
        
        if processor.export_to_json(json_output):
            print(f"‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –≤ JSON –≤—ã–ø–æ–ª–Ω–µ–Ω: {json_output}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ JSON —Ñ–∞–π–ª–∞
            with open(json_output, 'r', encoding='utf-8') as f:
                json_data = json.load(f)
                print(f"‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ JSON —Ñ–∞–π–ª–∞:")
                if 'sheets' in json_data:
                    print(f"   –ù–∞–π–¥–µ–Ω–æ –ª–∏—Å—Ç–æ–≤ –≤ JSON: {len(json_data['sheets'])}")
                    for sheet_name in json_data['sheets']:
                        print(f"   - {sheet_name}: {len(json_data['sheets'][sheet_name])} —Å—Ç—Ä–æ–∫")
                else:
                    print(f"   –û–¥–∏–Ω–æ—á–Ω—ã–π –ª–∏—Å—Ç: {len(json_data)} —Å—Ç—Ä–æ–∫")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ JSON")
            
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º JSON –æ–±—Ä–∞—Ç–Ω–æ –≤ Excel
        restored_excel = "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π_—Ñ–∞–π–ª.xlsx"
        os.makedirs(os.path.dirname(restored_excel), exist_ok=True)
        
        if json_to_excel(json_output, restored_excel):
            print(f"‚úÖ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ JSON –≤ Excel –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {restored_excel}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è JSON –≤ Excel")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ExcelProcessor: {e}")
    
    finally:
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        if os.path.exists(test_file):
            os.remove(test_file)


def test_excel_hierarchy_preserver():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ExcelHierarchyPreserver."""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ExcelHierarchyPreserver")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    test_file = create_test_excel_file("—Ç–µ—Å—Ç–æ–≤—ã–π_—Ñ–∞–π–ª2.xlsx")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–µ—Ä–∞—Ä—Ö–∏–∏
        preserver = ExcelHierarchyPreserver(test_file)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
        structure_info = preserver.get_structure_info()
        print(f"‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω: {test_file}")
        print(f"‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏—Å—Ç–æ–≤: {structure_info['sheet_count']}")
        
        if 'sheets' in structure_info:
            for sheet_name, sheet_info in structure_info['sheets'].items():
                print(f"   –õ–∏—Å—Ç '{sheet_name}': {sheet_info['rows']} —Å—Ç—Ä–æ–∫, {sheet_info['columns']} –∫–æ–ª–æ–Ω–æ–∫")
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ JSON
        json_output = "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/–∏–µ—Ä–∞—Ä—Ö–∏—è_—Ç–µ—Å—Ç.json"
        os.makedirs(os.path.dirname(json_output), exist_ok=True)
        
        if preserver.to_json(json_output):
            print(f"‚úÖ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ JSON –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {json_output}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤ JSON")
            
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ CSV —Ñ–∞–π–ª—ã
        csv_output_dir = "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/csv_—Ç–µ—Å—Ç"
        os.makedirs(csv_output_dir, exist_ok=True)
        
        if preserver.to_hierarchical_csv(csv_output_dir):
            print(f"‚úÖ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ CSV –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {csv_output_dir}")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
            csv_files = list(Path(csv_output_dir).glob("*.csv"))
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ CSV —Ñ–∞–π–ª–æ–≤: {len(csv_files)}")
            for csv_file in csv_files:
                print(f"   - {csv_file.name}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤ CSV")
            
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º JSON –æ–±—Ä–∞—Ç–Ω–æ –≤ Excel
        restored_excel = "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π_—Ñ–∞–π–ª2.xlsx"
        os.makedirs(os.path.dirname(restored_excel), exist_ok=True)
        
        if preserver_json_to_excel(json_output, restored_excel):
            print(f"‚úÖ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ JSON –≤ Excel –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {restored_excel}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è JSON –≤ Excel")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ExcelHierarchyPreserver: {e}")
    
    finally:
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        if os.path.exists(test_file):
            os.remove(test_file)


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤."""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–µ—Ä–∞—Ä—Ö–∏–∏ Excel —Ñ–∞–π–ª–æ–≤")
    print("=" * 70)
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    os.makedirs("—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã", exist_ok=True)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test_excel_processor()
    test_excel_hierarchy_preserver()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ '—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã'")


if __name__ == "__main__":
    main()