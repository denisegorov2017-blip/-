#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Test script to verify all GUI functionality
"""

import os
import sys
from pathlib import Path

# Add the src directory to the path
src_path = Path(__file__).parent / "src"
if str(src_path) not in sys.path:
    sys.path.insert(0, str(src_path))

def test_imports():
    """Test that all required modules can be imported"""
    try:
        from src.core.specialized_fish_data_processor import FishBatchDataProcessor
        from src.core.test_data_manager import TestDataManager
        from src.tkinter_gui import ShrinkageCalculatorGUI
        print("‚úÖ All imports successful")
        return True
    except Exception as e:
        print(f"‚ùå Import error: {e}")
        return False

def test_fish_batch_processor():
    """Test that the fish batch processor can be instantiated"""
    try:
        from src.core.specialized_fish_data_processor import FishBatchDataProcessor
        processor = FishBatchDataProcessor()
        print("‚úÖ FishBatchDataProcessor instantiated successfully")
        return True
    except Exception as e:
        print(f"‚ùå FishBatchDataProcessor error: {e}")
        return False

def test_test_data_manager():
    """Test that the test data manager can be instantiated"""
    try:
        from src.core.test_data_manager import TestDataManager
        manager = TestDataManager()
        print("‚úÖ TestDataManager instantiated successfully")
        return True
    except Exception as e:
        print(f"‚ùå TestDataManager error: {e}")
        return False

def main():
    """Run all tests"""
    print("üîß Testing GUI functionality...")
    print("=" * 50)
    
    tests = [
        test_imports,
        test_fish_batch_processor,
        test_test_data_manager
    ]
    
    passed = 0
    for test in tests:
        if test():
            passed += 1
    
    print("=" * 50)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {passed}/{len(tests)} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == len(tests):
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return 0
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã")
        return 1

if __name__ == "__main__":
    sys.exit(main())