#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ Excel —Ñ–∞–π–ª–æ–≤ –≤ JSON –∏ –æ–±—Ä–∞—Ç–Ω–æ
"""

import sys
import os
import json
import pandas as pd
from openpyxl import Workbook
from openpyxl.styles import Font



from src.core.excel_hierarchy_preserver import ExcelHierarchyPreserver, json_to_excel

def create_test_excel_with_grouping():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π Excel —Ñ–∞–π–ª —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤."""
    wb = Workbook()
    ws = wb.active
    ws.title = "–¢–µ—Å—Ç–æ–≤—ã–π –ª–∏—Å—Ç"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    data = [
        ["–ì—Ä—É–ø–ø–∞ 1", "", ""],
        ["–ü–æ–¥–≥—Ä—É–ø–ø–∞ 1.1", "–ó–Ω–∞—á–µ–Ω–∏–µ 1", 100],
        ["–ü–æ–¥–≥—Ä—É–ø–ø–∞ 1.2", "–ó–Ω–∞—á–µ–Ω–∏–µ 2", 200],
        ["–ò—Ç–æ–≥–æ –ø–æ –≥—Ä—É–ø–ø–µ 1", "", 300],
        ["–ì—Ä—É–ø–ø–∞ 2", "", ""],
        ["–ü–æ–¥–≥—Ä—É–ø–ø–∞ 2.1", "–ó–Ω–∞—á–µ–Ω–∏–µ 3", 150],
        ["–ü–æ–¥–≥—Ä—É–ø–ø–∞ 2.2", "–ó–Ω–∞—á–µ–Ω–∏–µ 4", 250],
        ["–ò—Ç–æ–≥–æ –ø–æ –≥—Ä—É–ø–ø–µ 2", "", 400],
        ["–û–±—â–∏–π –∏—Ç–æ–≥", "", 700]
    ]
    
    # –ó–∞–ø–æ–ª–Ω—è–µ–º –ª–∏—Å—Ç –¥–∞–Ω–Ω—ã–º–∏
    for row_idx, row_data in enumerate(data, 1):
        for col_idx, cell_value in enumerate(row_data, 1):
            ws.cell(row=row_idx, column=col_idx, value=cell_value)
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É —Å—Ç—Ä–æ–∫
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏ 2-4 (–ü–æ–¥–≥—Ä—É–ø–ø–∞ 1.1 - –ò—Ç–æ–≥–æ –ø–æ –≥—Ä—É–ø–ø–µ 1)
    ws.row_dimensions.group(2, 4, hidden=True)
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏ 5-8 (–ì—Ä—É–ø–ø–∞ 2 - –ò—Ç–æ–≥–æ –ø–æ –≥—Ä—É–ø–ø–µ 2)
    ws.row_dimensions.group(5, 8, hidden=True)
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    for row in [1, 4, 5, 8, 9]:
        for col in range(1, 4):
            ws.cell(row=row, column=col).font = Font(bold=True)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    test_file = "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/—Ç–µ—Å—Ç_–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞.xlsx"
    os.makedirs("—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã", exist_ok=True)
    wb.save(test_file)
    wb.close()
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π Excel —Ñ–∞–π–ª —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π: {test_file}")
    return test_file

def test_grouping_preservation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –ø—Ä–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ Excel –≤ JSON –∏ –æ–±—Ä–∞—Ç–Ω–æ."""
    print("üî¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ Excel —Ñ–∞–π–ª–æ–≤")
    print("=" * 60)
    
    # 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π Excel —Ñ–∞–π–ª —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π
    test_excel_file = create_test_excel_with_grouping()
    
    # 2. –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º Excel –≤ JSON —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏
    json_file = "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/—Ç–µ—Å—Ç_–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞.json"
    
    try:
        preserver = ExcelHierarchyPreserver(test_excel_file)
        if preserver.to_json(json_file):
            print(f"‚úÖ Excel —Ñ–∞–π–ª –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω –≤ JSON —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏: {json_file}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è Excel –≤ JSON")
            assert False, "–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è Excel –≤ JSON"
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è JSON —Ñ–∞–π–ª–∞: {e}")
        assert False, f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è JSON —Ñ–∞–π–ª–∞: {e}"
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ JSON —Ñ–∞–π–ª–∞
    try:
        with open(json_file, 'r', encoding='utf-8') as f:
            json_data = json.load(f)
        
        print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ JSON —Ñ–∞–π–ª–∞:")
        print(f"   –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª: {json_data.get('source_file', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏—Å—Ç–æ–≤: {json_data.get('sheet_count', 0)}")
        
        if 'grouping_info' in json_data:
            print("   –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–µ:")
            for sheet_name, group_info in json_data['grouping_info'].items():
                print(f"     –õ–∏—Å—Ç '{sheet_name}':")
                if 'row_outline_levels' in group_info:
                    print(f"       –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Å—Ç—Ä–æ–∫: {len(group_info['row_outline_levels'])} –∑–∞–ø–∏—Å–µ–π")
                if 'column_outline_levels' in group_info:
                    print(f"       –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Å—Ç–æ–ª–±—Ü–æ–≤: {len(group_info['column_outline_levels'])} –∑–∞–ø–∏—Å–µ–π")
        else:
            print("   –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON —Ñ–∞–π–ª–∞: {e}")
        assert False, f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON —Ñ–∞–π–ª–∞: {e}"
    
    # 4. –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º JSON –æ–±—Ä–∞—Ç–Ω–æ –≤ Excel
    restored_excel_file = "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π_—Ç–µ—Å—Ç_–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞.xlsx"
    
    try:
        if json_to_excel(json_file, restored_excel_file):
            print(f"‚úÖ JSON —Ñ–∞–π–ª –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω –æ–±—Ä–∞—Ç–Ω–æ –≤ Excel: {restored_excel_file}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è JSON –≤ Excel")
            assert False, "–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è JSON –≤ Excel"
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è Excel —Ñ–∞–π–ª–∞: {e}")
        assert False, f"–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è Excel —Ñ–∞–π–ª–∞: {e}"
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    assert os.path.exists(test_excel_file) and os.path.exists(json_file) and os.path.exists(restored_excel_file), "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
    print("\n‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã")

