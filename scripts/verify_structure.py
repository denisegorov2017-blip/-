#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
"""

import os
from pathlib import Path

def verify_directory_structure():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –ø—Ä–æ–µ–∫—Ç–∞"""
    
    # –û–∂–∏–¥–∞–µ–º–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    expected_dirs = [
        "–∏—Å—Ö–æ–¥–Ω—ã–µ_–¥–∞–Ω–Ω—ã–µ",
        "–∏—Å—Ö–æ–¥–Ω—ã–µ_–¥–∞–Ω–Ω—ã–µ/–î–ª—è_—Ä–∞—Å—á–µ—Ç–∞_–∫–æ—ç—Ñ—Ñ",
        "src",
        "src/core",
        "tests",
        "tests/debugging",
        "docs",
        "examples",
        "scripts",
        "scripts/debugging",
        "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã",
        "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/–∞—Ä—Ö–∏–≤",
        "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/—Ç–µ—Å—Ç–æ–≤—ã–µ_–¥–∞–Ω–Ω—ã–µ",
        "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/—Ä–µ–∞–ª—å–Ω—ã–µ_–¥–∞–Ω–Ω—ã–µ",
        "logs"
    ]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    missing_dirs = []
    for dir_path in expected_dirs:
        if not Path(dir_path).exists():
            missing_dirs.append(dir_path)
    
    if missing_dirs:
        print("‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:")
        for dir_path in missing_dirs:
            print(f"  - {dir_path}")
        return False
    else:
        print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        return True

def verify_key_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    
    # –û–∂–∏–¥–∞–µ–º—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã
    key_files = [
        "requirements.txt",
        "launch.py",
        "src/gui.py",
        "src/dashboard.py",
        "src/core/adaptive_shrinkage_calculator.py",
        "scripts/organize_project.py",
        "README.md"
    ]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤
    missing_files = []
    for file_path in key_files:
        if not Path(file_path).exists():
            missing_files.append(file_path)
    
    if missing_files:
        print("‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã:")
        for file_path in missing_files:
            print(f"  - {file_path}")
        return False
    else:
        print("‚úÖ –í—Å–µ –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        return True

def verify_source_data():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    
    source_dir = Path("–∏—Å—Ö–æ–¥–Ω—ã–µ_–¥–∞–Ω–Ω—ã–µ/–î–ª—è_—Ä–∞—Å—á–µ—Ç–∞_–∫–æ—ç—Ñ—Ñ")
    if not source_dir.exists():
        print("‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –∏—Å—Ö–æ–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ç–æ–ª—å–∫–æ Excel —Ñ–∞–π–ª—ã (–∏–ª–∏ –ø—É—Å—Ç–æ)
    non_excel_files = []
    for file_path in source_dir.iterdir():
        if file_path.is_file() and file_path.suffix.lower() not in ['.xlsx', '.xls']:
            non_excel_files.append(file_path.name)
    
    if non_excel_files:
        print("‚ö†Ô∏è  –í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –Ω–µ Excel —Ñ–æ—Ä–º–∞—Ç–∞:")
        for file_name in non_excel_files:
            print(f"  - {file_name}")
        return False
    else:
        print("‚úÖ –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã (—Ç–æ–ª—å–∫–æ Excel —Ñ–∞–π–ª—ã)")
        return True

def verify_results_structure():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
    
    results_dir = Path("—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã")
    if not results_dir.exists():
        print("‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    subdirs = ["–∞—Ä—Ö–∏–≤", "—Ç–µ—Å—Ç–æ–≤—ã–µ_–¥–∞–Ω–Ω—ã–µ", "—Ä–µ–∞–ª—å–Ω—ã–µ_–¥–∞–Ω–Ω—ã–µ"]
    missing_subdirs = []
    for subdir in subdirs:
        if not (results_dir / subdir).exists():
            missing_subdirs.append(subdir)
    
    if missing_subdirs:
        print("‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö:")
        for subdir in missing_subdirs:
            print(f"  - {subdir}")
        return False
    else:
        print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...")
    print("=" * 50)
    
    checks = [
        verify_directory_structure,
        verify_key_files,
        verify_source_data,
        verify_results_structure
    ]
    
    all_passed = True
    for check in checks:
        if not check():
            all_passed = False
        print()
    
    print("=" * 50)
    if all_passed:
        print("üéâ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º!")
        print("   –ü—Ä–æ–µ–∫—Ç –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω —Å–æ–≥–ª–∞—Å–Ω–æ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É gemini_self_guide.md")
    else:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –ø—Ä–æ–µ–∫—Ç–∞")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'python scripts/organize_project.py' –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
    
    return all_passed

if __name__ == "__main__":
    main()